name: PR Checks

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Build test
        run: cargo build --release --all --all-targets

  test-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Unit tests
        run: cargo test --all

  test-e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run E2E tests
        run: cargo run -p round-trip-tests

  test-compare-to-ref-implementation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install dependencies
        run: pip install "zserio==2.11.0"
      - name: Generate python zserio bindings
        run: |
          cd tests
          ./gen_reference_modules.sh
      - name: Generate the artifacts using Python
        run: |
          cd tests/compare-ref-impl-tests/python
          poetry install
          poetry run python main.py
      - name: Run the rust test cases to read the python artifacts
        run: cargo run -p compare-ref-impl-tests

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
      - name: Run lint check
        run: cargo clippy --all --all-targets -- -D warnings

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
      - name: Run fmt check
        run: |
          # The E2E test works by generating the rust interface files to read/write zserio.
          # Since these files are referenced in the E2E test code, if these files are missing,
          # the linter checker will not be able to find them, and throw an error.
          cargo run -p round-trip-tests
          cargo fmt --all -- --check
